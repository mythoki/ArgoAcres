/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:MainTab:504404:
  appc.background(230);
} //_CODE_:MainTab:504404:

public void cropSlider(GCustomSlider source, GEvent event) { //_CODE_:crops:572143:
  println("cropSlider - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:crops:572143:

public void tempSlider(GCustomSlider source, GEvent event) { //_CODE_:temp:211877:
  println("temp - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:temp:211877:

public void rainWeather(GOption source, GEvent event) { //_CODE_:RW:235106:
  println("RW - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:RW:235106:

public void cloudWeather(GOption source, GEvent event) { //_CODE_:CW:515739:
  println("CW - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:CW:515739:

public void sunWeather(GOption source, GEvent event) { //_CODE_:SW:791619:
  println("SW - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:SW:791619:

public void stormyWeather(GOption source, GEvent event) { //_CODE_:SSW:627880:
  println("SSW - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:SSW:627880:

public void snowWeather(GOption source, GEvent event) { //_CODE_:SNW:858856:
  println("SNW - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:SNW:858856:

public void heatWeather(GOption source, GEvent event) { //_CODE_:HW:543056:
  println("HW - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:HW:543056:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  MainTab = GWindow.getWindow(this, "Window title", 0, 0, 400, 350, JAVA2D);
  MainTab.noLoop();
  MainTab.setActionOnClose(G4P.KEEP_OPEN);
  MainTab.addDrawHandler(this, "win_draw1");
  crops = new GCustomSlider(MainTab, 50, 30, 100, 40, "grey_blue");
  crops.setLimits(0.5, 0.0, 1.0);
  crops.setNumberFormat(G4P.DECIMAL, 2);
  crops.setOpaque(false);
  crops.addEventHandler(this, "cropSlider");
  C_label = new GLabel(MainTab, 60, 20, 80, 20);
  C_label.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  C_label.setText("Crop Slider");
  C_label.setOpaque(false);
  W_label = new GLabel(MainTab, 210, 20, 100, 20);
  W_label.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  W_label.setText("Weather");
  W_label.setOpaque(false);
  temp = new GCustomSlider(MainTab, 150, 120, 159, 100, "grey_blue");
  temp.setShowLimits(true);
  temp.setRotation(PI/2, GControlMode.CORNER);
  temp.setLimits(0.5, -35.0, 35.0);
  temp.setNbrTicks(20);
  temp.setStickToTicks(true);
  temp.setShowTicks(true);
  temp.setNumberFormat(G4P.DECIMAL, 2);
  temp.setOpaque(false);
  temp.addEventHandler(this, "tempSlider");
  T_label = new GLabel(MainTab, 60, 100, 80, 20);
  T_label.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  T_label.setText("Temperature");
  T_label.setOpaque(false);
  weather = new GToggleGroup();
  RW = new GOption(MainTab, 200, 40, 120, 20);
  RW.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  RW.setText("Rain");
  RW.setOpaque(false);
  RW.addEventHandler(this, "rainWeather");
  CW = new GOption(MainTab, 200, 60, 120, 20);
  CW.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  CW.setText("Cloudy");
  CW.setOpaque(false);
  CW.addEventHandler(this, "cloudWeather");
  SW = new GOption(MainTab, 200, 80, 120, 20);
  SW.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  SW.setText("Sunny");
  SW.setOpaque(false);
  SW.addEventHandler(this, "sunWeather");
  SSW = new GOption(MainTab, 200, 100, 120, 20);
  SSW.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  SSW.setText("Stormy");
  SSW.setOpaque(false);
  SSW.addEventHandler(this, "stormyWeather");
  SNW = new GOption(MainTab, 200, 120, 120, 20);
  SNW.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  SNW.setText("Snowy");
  SNW.setOpaque(false);
  SNW.addEventHandler(this, "snowWeather");
  HW = new GOption(MainTab, 200, 140, 120, 20);
  HW.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  HW.setText("Heatwave");
  HW.setOpaque(false);
  HW.addEventHandler(this, "heatWeather");
  weather.addControl(RW);
  RW.setSelected(true);
  weather.addControl(CW);
  weather.addControl(SW);
  weather.addControl(SSW);
  weather.addControl(SNW);
  weather.addControl(HW);
  MainTab.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow MainTab;
GCustomSlider crops; 
GLabel C_label; 
GLabel W_label; 
GCustomSlider temp; 
GLabel T_label; 
GToggleGroup weather; 
GOption RW; 
GOption CW; 
GOption SW; 
GOption SSW; 
GOption SNW; 
GOption HW; 
