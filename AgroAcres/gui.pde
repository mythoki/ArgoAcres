/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:MainTab:504404:
  appc.background(230);
} //_CODE_:MainTab:504404:

public void tempSlider(GCustomSlider source, GEvent event) { //_CODE_:temp:211877:
  println("temp - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:temp:211877:

public void cloudWeather(GOption source, GEvent event) { //_CODE_:CloudyW:235106:
  println("RW - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:CloudyW:235106:

public void heatWeather(GOption source, GEvent event) { //_CODE_:HWW:515739:
  println("CW - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:HWW:515739:

public void rainWeather(GOption source, GEvent event) { //_CODE_:RW:791619:
  println("SW - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:RW:791619:

public void snowyWeather(GOption source, GEvent event) { //_CODE_:SW:627880:
  println("SSW - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:SW:627880:

public void stormyWeather(GOption source, GEvent event) { //_CODE_:STW:858856:
  println("SNW - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:STW:858856:

public void sunnyWeather(GOption source, GEvent event) { //_CODE_:SUW:543056:
  println("HW - GOption >> GEvent." + event + " @ " + millis());
} //_CODE_:SUW:543056:

public void Co_clicked(GCheckbox source, GEvent event) { //_CODE_:Corn:591166:
  println("checkbox1 - GCheckbox >> GEvent." + event + " @ " + millis());
} //_CODE_:Corn:591166:

public void O_clicked(GCheckbox source, GEvent event) { //_CODE_:Oats:608444:
  println("checkbox1 - GCheckbox >> GEvent." + event + " @ " + millis());
} //_CODE_:Oats:608444:

public void W_clicked(GCheckbox source, GEvent event) { //_CODE_:Wheat:206827:
  println("checkbox1 - GCheckbox >> GEvent." + event + " @ " + millis());
} //_CODE_:Wheat:206827:

public void dN_buttonClicked(GButton source, GEvent event) { //_CODE_:DNbutton:688493:
  if( clicked ) {
    clicked = false;
    DNbutton.setText("Night");
    
  }
  
  else {
    clicked = true;
    DNbutton.setText("Day");
  }
} //_CODE_:DNbutton:688493:

public void Man_buttonClicked(GButton source, GEvent event) { //_CODE_:Manbutton:763312:
    argoScreen = 0;
} //_CODE_:Manbutton:763312:

public void Reset_buttonClicked(GButton source, GEvent event) { //_CODE_:Resetbutton:237767:
  clear();
} //_CODE_:Resetbutton:237767:

public void season_click(GDropList source, GEvent event) { //_CODE_:Seasons:246162:
  println("Seasons - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:Seasons:246162:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  MainTab = GWindow.getWindow(this, "Window title", 0, 0, 300, 370, JAVA2D);
  MainTab.noLoop();
  MainTab.setActionOnClose(G4P.KEEP_OPEN);
  MainTab.addDrawHandler(this, "win_draw1");
  C_label = new GLabel(MainTab, 20, 20, 100, 20);
  C_label.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  C_label.setText("Crops");
  C_label.setLocalColorScheme(GCScheme.RED_SCHEME);
  C_label.setOpaque(true);
  W_label = new GLabel(MainTab, 150, 20, 120, 20);
  W_label.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  W_label.setText("Weather");
  W_label.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  W_label.setOpaque(true);
  temp = new GCustomSlider(MainTab, 260, 200, 159, 100, "grey_blue");
  temp.setShowLimits(true);
  temp.setRotation(PI/2, GControlMode.CORNER);
  temp.setLimits(0.5, -35.0, 35.0);
  temp.setNbrTicks(20);
  temp.setStickToTicks(true);
  temp.setShowTicks(true);
  temp.setNumberFormat(G4P.DECIMAL, 2);
  temp.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  temp.setOpaque(false);
  temp.addEventHandler(this, "tempSlider");
  T_label = new GLabel(MainTab, 150, 180, 120, 20);
  T_label.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  T_label.setText("Temperature");
  T_label.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  T_label.setOpaque(true);
  weather = new GToggleGroup();
  CloudyW = new GOption(MainTab, 150, 40, 120, 20);
  CloudyW.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  CloudyW.setText("Cloudy");
  CloudyW.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  CloudyW.setOpaque(true);
  CloudyW.addEventHandler(this, "cloudWeather");
  HWW = new GOption(MainTab, 150, 60, 120, 20);
  HWW.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  HWW.setText("Heatwave");
  HWW.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  HWW.setOpaque(true);
  HWW.addEventHandler(this, "heatWeather");
  RW = new GOption(MainTab, 150, 80, 120, 20);
  RW.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  RW.setText("Rain");
  RW.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  RW.setOpaque(true);
  RW.addEventHandler(this, "rainWeather");
  SW = new GOption(MainTab, 150, 100, 120, 20);
  SW.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  SW.setText("Snowy");
  SW.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  SW.setOpaque(true);
  SW.addEventHandler(this, "snowyWeather");
  STW = new GOption(MainTab, 150, 120, 120, 20);
  STW.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  STW.setText("Stormy");
  STW.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  STW.setOpaque(true);
  STW.addEventHandler(this, "stormyWeather");
  SUW = new GOption(MainTab, 150, 140, 120, 20);
  SUW.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  SUW.setText("Sunny");
  SUW.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  SUW.setOpaque(true);
  SUW.addEventHandler(this, "sunnyWeather");
  weather.addControl(CloudyW);
  weather.addControl(HWW);
  weather.addControl(RW);
  weather.addControl(SW);
  weather.addControl(STW);
  weather.addControl(SUW);
  SUW.setSelected(true);
  Corn = new GCheckbox(MainTab, 20, 40, 100, 20);
  Corn.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  Corn.setText("Corn");
  Corn.setLocalColorScheme(GCScheme.RED_SCHEME);
  Corn.setOpaque(true);
  Corn.addEventHandler(this, "Co_clicked");
  Oats = new GCheckbox(MainTab, 20, 60, 100, 20);
  Oats.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  Oats.setText("Oats");
  Oats.setLocalColorScheme(GCScheme.RED_SCHEME);
  Oats.setOpaque(true);
  Oats.addEventHandler(this, "O_clicked");
  Wheat = new GCheckbox(MainTab, 20, 80, 100, 20);
  Wheat.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  Wheat.setText("Wheat");
  Wheat.setLocalColorScheme(GCScheme.RED_SCHEME);
  Wheat.setOpaque(true);
  Wheat.addEventHandler(this, "W_clicked");
  DNbutton = new GButton(MainTab, 30, 115, 80, 30);
  DNbutton.setText("Night");
  DNbutton.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  DNbutton.addEventHandler(this, "dN_buttonClicked");
  TC_label = new GLabel(MainTab, 120, 200, 80, 20);
  TC_label.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  TC_label.setText("Cold");
  TC_label.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  TC_label.setOpaque(true);
  TH_label = new GLabel(MainTab, 120, 340, 80, 20);
  TH_label.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  TH_label.setText("Hot");
  TH_label.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  TH_label.setOpaque(true);
  Manbutton = new GButton(MainTab, 30, 330, 80, 30);
  Manbutton.setText("Back to Manual");
  Manbutton.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  Manbutton.addEventHandler(this, "Man_buttonClicked");
  Resetbutton = new GButton(MainTab, 30, 290, 80, 30);
  Resetbutton.setText("Reset");
  Resetbutton.addEventHandler(this, "Reset_buttonClicked");
  Seasons = new GDropList(MainTab, 20, 160, 100, 125, 4, 10);
  Seasons.setItems(loadStrings("list_246162"), 1);
  Seasons.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  Seasons.addEventHandler(this, "season_click");
  MainTab.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow MainTab;
GLabel C_label; 
GLabel W_label; 
GCustomSlider temp; 
GLabel T_label; 
GToggleGroup weather; 
GOption CloudyW; 
GOption HWW; 
GOption RW; 
GOption SW; 
GOption STW; 
GOption SUW; 
GCheckbox Corn; 
GCheckbox Oats; 
GCheckbox Wheat; 
GButton DNbutton; 
GLabel TC_label; 
GLabel TH_label; 
GButton Manbutton; 
GButton Resetbutton; 
GDropList Seasons; 
